name: yearly analysis # name of my workflow 

on: 
  schedule: 
    - cron: "0 0 1 6 *" # triggers the workflow every year on the first of June at midnight; 0 0  (00:00 Midnight), 1 (first day of month), 6 (June), * (every year)

  push: 
    paths: 
      - 'Montserrat/data/**' # triggers a workflow every time a new file is added to the data folder in the repository
      
  workflow_dispatch:  # This allows manual triggering of the workflow
 
jobs: # define jobs
  job_data_preparation: # set the name of a below defined job
    runs-on: macos-latest # set Environment for the job, here use windows as the virtual machine environment 

    steps: 
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3
        
      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2
          
      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table"))' 

          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Install pkg-config and pkgconf silently # this is solely a step to overcome issues with lots of annoying but non fatal and distractive error messages 
        run: |
          brew install pkg-config || true
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          brew install pkgconf || true

      - name: Run data preparation for Nmix models in NIMBLE
        run: Rscript 'Montserrat_forest_bird_monitoring_data_prep.R' 

      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions 
        run: |
          git config --global user.name "github-actions[bot]" 
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository 
        run: |
          git add data/MONTSERRAT_ANNUAL_DATA_INPUT.RData
          git commit -m "Automatically in git actions prepared data from Montserrat Forest Monitoring for any analysis" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail

      - name: Pull latest changes from main
        run: |
          git fetch origin main
          git merge --no-edit origin/main
          
      - name: Push changes to the repository
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main

  job_data_preparation_nimble: # start another job
    runs-on: macos-latest
    needs: job_data_preparation # set dependency to first job because the output of this job is needed for the current one 
    
    steps:
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table", "nimble"))' 
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run general data preparation 
        run: Rscript 'Montserrat_forest_bird_monitoring_data_prep_Nmix_model_def_nimble.R' # run RScript to prepare data for Nmix models in NIMBLE

      - name: Pass prepared data and defined model to next job # using artifacts 
        uses: actions/upload-artifact@v4
        with: 
          name: prepared data and defined NIMBLE model 
          path: data/Montserrat_forest_bird_monitoring_yearly_NIMBLE_model_data.RData
          retention-days: 1 # this sets the time for how long the artifact is saved under the artifact link

  job_run_Nmix_model:
    runs-on: macos-latest 
    needs: job_data_preparation_nimble
    strategy:
      matrix: # starts a matrix process where multiple jobs (one for each species) run simultaneously 
        SPECIES: ["MTOR", "FOTH", "BRQD", "TREM", "ACHU", "PTCA", "PETH", "GTCA", "SBTH", "SNPI", "CAEL", "BANA"] # set all species for which this job aka running the Nmix model in NIMBLE should be performed
    
    steps: 
      - name: Checkout repository 
        uses: actions/checkout@v3

      - name: Get prepared data and defined model from previous job # using artifacts
        uses: actions/download-artifact@v4
        with: 
          name: prepared data and defined NIMBLE model 
          path: data/  # Specify the destination directory

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table", "nimble", "lubridate", "MCMCvis"))' 
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run Nmix model in NIMBLE for ${{ matrix.SPECIES }}
        env: # create an environment variable that is passed in this step
          SPECIES: ${{ matrix.SPECIES }}
        run: |
          Rscript 'Montserrat_forest_bird_monitoring_run_Nmix_nimble.R' ${{ matrix.SPECIES }} # run RScript with models for each species

      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions 
        run: |
          git config --global user.name "github-actions[bot]" 
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository 
        run: |
          git add output/${{ matrix.SPECIES }}_trend_model_nimble.rds # this selects solely the file for a certain species to pass to github
          git add output/${{ matrix.SPECIES }}_trend_estimates.csv
          git commit -m "Output of Nmix models from NIMBLE calculated in git actions workflow" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail

      - name: Pull latest changes from main
        run: |
          git fetch origin main
          git merge --no-edit origin/main
          
      - name: Push changes to the repository
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main

  job_create_plot_report: # start another job
    runs-on: macos-latest
    needs: job_run_Nmix_model # set dependency to first job because the output of this job is needed for the current one 
    
    steps:
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3

      - name: Get prepared data and defined model from previous job # using artifacts
        uses: actions/download-artifact@v4
        with: 
          name: prepared data and defined NIMBLE model # this data is needed for the obsCovs and siteCovs etc for plotting
          path: data/  # Specify the destination directory

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Set up Pandoc # install pandoc for rendering an rmd 
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table", "rmarkdown", "knitr"))' 
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run general data preparation 
        run: Rscript 'Montserrat_forest_bird_monitoring_create_summary_table_plot_report.R' # run RScript to prepare data for Nmix models in NIMBLE

      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions 
        run: |
          git config --global user.name "github-actions[bot]" 
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository 
        run: |
          git add output/Annual_estimates.csv
          git add output/Trend_estimates.csv
          git add output/Montserrat_ForestBird_Trends.pdf
          git add output/Montserrat_ForestBird_AnnualSummary_modelled.html
          git commit -m "Summary tables of annual estimates, trends and plot from Nmix calculated in git actions workflow" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail

      - name: Pull latest changes from main
        run: |
          git fetch origin main
          git merge --no-edit origin/main
          
      - name: Push changes to the repository
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main



          

#
#      - name: Push general prepared data to git repository 
#        run: # add code which pushes the object 
#
#      - name: Run data preparation and initialisation of NIMBLE model 
#        run: Rscript 'Montserrat_forest_bird_monitoring_data_prep_for_Nmix_nimble.R'
#
#  job_run_NIMBLE_models: # set the name of a below defined job
#    runs-on: ubuntu-latest # set Environment for the job, here use windows as the virtual machine environment 
#    needs: job_data_preparation # set required jobs for this actual job to perform
#
#    steps: 
#      - name: Checkout repository # provide a name for this step within the job
#        uses: actions/checkout@v3
#
#      - name: Set up R environment
#        uses: r-lib/actions/setup-r@v2
#        
#      - name: Install Nim from git repository # Install Nim from git repository; needed for installation of NIMBLE 
#        uses: iffy/install-nim@v5#

      # - name: Install NIMBLE # actually install NIMBLE ###### THIS IS WHERE THE JOB FAILS ###### Could not find a file with a .nimble extension inside the specified directory: D:\a\Montserrat\Montserrat
      #   run: nimble install -y
        
      # - name: NIMBLE test # I'm not very sure what running 'nimble test' actually does 
        # run: nimble test

#      - name: Install R dependencies 
#        run: | 
#          Rscript -e 'install.packages(c("ggplot2", "rmarkdown", "knitr", "remotes", "tidyverse", "data.table", "lubridate", "grid", "gtable", "reticulate", "splitstackshape", "RODBC",
#            "dtplyr", "ggplot2", "MCMCvis", "nimble", "basicMCMCplots", "parallel", "foreach", "doParallel", "dplyr"))' 
#
#          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

